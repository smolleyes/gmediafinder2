#!/usr/bin/env python
import sys # kudos to Nicholas Herriot (see comments)
import gtk
import webkit
import warnings
import urllib
import re
from time import sleep
from optparse import OptionParser
 
warnings.filterwarnings('ignore')
 
class WebView(webkit.WebView):
	def get_html(self):
		self.execute_script('oldtitle=document.title;document.title=document.documentElement.innerHTML;')
		html = self.get_main_frame().get_title()
		self.execute_script('document.title=oldtitle;')
		return html
 
class Crawler():
    def __init__(self, url):
        gtk.Window.__init__(self)
	self.connect('delete-event', lambda window, event: gtk.main_quit())
	self.scrolled_window = gtk.ScrolledWindow()
        self._url = url
    
    def crawl(self):
        view = WebView()
        view.load_uri(self._url)
	view.connect('resource-request-starting', self.resource_cb)

	self.scrolled_window.add(view)     
	self.add(self.scrolled_window)
	self.set_size_request(1024,800)
	self.show_all()
        gtk.main()
    
    def resource_cb(self, view, frame, resource, request, response):
	req = request.get_uri()
    	if 'megavideo.com/files/' in req:
		print "MEGAVIDEO: Link %s detected" % req
		
 
def main():
    options = get_cmd_options()
    crawler = Crawler(options.url)
    crawler.crawl()

def get_cmd_options():
	"""
		gets and validates the input from the command line
	"""
	usage = "usage: %prog [options] args"
	parser = OptionParser(usage)
	parser.add_option('-u', '--url', dest = 'url', help = 'URL to fetch data from')
 
	(options,args) = parser.parse_args()
 
	if not options.url:
		print 'You must specify an URL.',sys.argv[0],'--help for more details' 
		exit(1)
 
	return options

if __name__ == '__main__':
	main()
